/**
 * 方法区用于存放Class的相关信息，如类名、访问修饰符、常量池、字段。
 *
 * Spring、 Hibernate，在对类进行增强时，都会使用到CGLib这类字节码技术，
 * 增强的类越多，就需要越大的方法区来保证动态生成的Class可以加载入内存。
 * 另外，JVM上的动态语言（ 例如Groovy等） 通常都会持续创建类来实现语言的动态性。
 *
 * 这类场景除了上面提到的程序使用了CGLib字节码增强和动态语言之外，常见的还有：
 * 大量JSP或动态产生JSP文件的应用（ JSP第一次运行时需要编译为Java类）、
 * 基于OSGi的应用（ 即使是同一个类文件，被不同的加载器加载也会视为不同的类）等。
 */
package methodarea;