/**
 * 单例模式（Singleton Pattern）：确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例，
 * 这个类称为单例类，它提供全局访问的方法。单例模式是一种对象创建型模式。

 单例模式有三个要点：一是某个类只能有一个实例；二是它必须自行创建这个实例；
 三是它必须自行向整个系统提供这个实例。

 单例模式是结构最简单的设计模式一，在它的核心结构中只包含一个被称为单例类的特殊类。

 Singleton（单例）：在单例类的内部实现只生成一个实例，
 同时它提供一个静态的 getInstance() 工厂方法，让客户可以访问它的唯一实例；
 为了防止在外部对其实例化，将其构造函数设计为私有；
 在单例类内部定义了一个 Singleton 类型的静态对象，作为外部共享的唯一实例。
 */
package creational.singleton;
